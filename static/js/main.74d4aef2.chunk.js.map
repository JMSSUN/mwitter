{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Mweet.js","components/MweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Mweet","mweetObj","isOwner","editing","setEditing","text","newMweet","setNewMweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","MweetFactory","userObj","mweet","setMweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","mweets","setMweets","useEffect","onSnapshot","snapshot","mweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyMweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","textAlign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d4aef2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                //Create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //Login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }   \r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n            {error  && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"Create Account\"}</span> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { firebaseInstance, authService } from 'fbase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {      \r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button name=\"google\" onClick={onSocialClick} className=\"authBtns\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button name=\"github\" onClick={onSocialClick} className=\"authBtns\">Continue with GitHub <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Mweet = ({mweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newMweet, setNewMweet] = useState(mweetObj.text);\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this mweet?\");\r\n        if(ok) {\r\n            //delete\r\n            await dbService.doc(`mweets/${mweetObj.id}`).delete();\r\n            if(mweetObj.attachmentUrl !== \"\" ){\r\n                await storageService.refFromURL(mweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        // console.log(mweetObj, newMweet);\r\n        await dbService.doc(`mweets/${mweetObj.id}`).update({\r\n            text:newMweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewMweet(value);\r\n    }\r\n\r\n    return (\r\n       \r\n        <div className=\"nweet\">\r\n           {editing ? (\r\n            <>\r\n                <form onSubmit={onSubmit}  className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit your mweet \" value={newMweet} required onChange={onChange} autoFocus className=\"formInput\"/> \r\n                    <input type=\"submit\" value=\"Update Mweet\" className=\"formBtn\" />\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </form>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <h4>{mweetObj.text}</h4>\r\n                {mweetObj.attachmentUrl && <img src={mweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n           )\r\n       }\r\n       </div>\r\n    )\r\n};\r\n\r\nexport default Mweet;","import React, {useState} from 'react';\r\nimport {storageService, dbService} from 'fbase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MweetFactory = ({userObj}) => {\r\n    const [mweet, setMweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (mweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") { // 첨부파일 있을 때\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n            \r\n        }\r\n        const mweetObj = {\r\n            text: mweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"mweets\").add(mweetObj);\r\n        setMweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target:{value}} = event;\r\n        setMweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        // console.log(event.target.files);\r\n        const {\r\n            target: {files},\r\n        } = event; // event 안에서 target 안에서 파일을 받아오는 것 \r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            // console.log(finishedEvent);\r\n            const {\r\n                currentTarget: {result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input className=\"factoryInput__input\" value={mweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind\" maxLength={120} />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input  id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0, }} />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment} style={{ backgroundImage: attachment, }} /> \r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n        </form>\r\n    )\r\n}\r\nexport default MweetFactory;","import { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport Mweet from 'components/Mweet';\r\nimport MweetFactory from 'components/MweetFactory';\r\n\r\nconst Home = ({userObj}) => {    \r\n    const [mweets, setMweets] = useState([]);    \r\n    // const getMweets = async() => {\r\n    //     const dbMweets = await dbService.collection(\"mweets\").get();\r\n    //     dbMweets.forEach((document) => {\r\n    //         const mweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id\r\n    //         }\r\n    //         setMweets(prev => [mweetObject, ...prev]); // 가장 최근 data부터 \r\n    //     });\r\n    // }\r\n    useEffect(() => {\r\n        // getMweets();\r\n        //orderBy(\"createdAt\",\"desc\").\r\n        dbService.collection(\"mweets\").onSnapshot(snapshot => {\r\n            const mweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setMweets(mweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <MweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {mweets.map((mweet) => (\r\n                    <Mweet key={mweet.id} mweetObj={mweet} isOwner={mweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\"); // go home\r\n    }\r\n    const getMyMweets = async() => {\r\n        const mweets = await dbService.collection(\"mweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\", \"desc\").get();\r\n        // console.log(mweets.docs.map(doc => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyMweets();\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange} type=\"text\" placeholder=\"display name\" value={newDisplayName} autoFocus className=\"formInput\"/>\r\n                <input type=\"submit\" value=\"Update profile\" className=\"formBtn\" style={{ marginTop: 10, }}/>\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li><Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}>\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                  {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route> \r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route> \r\n                    {/* <Redirect from=\"*\" to=\"/\" />  */}\r\n                </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {  \r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(()=> {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\r\n      <footer style={{textAlign: \"center\", marginTop: \"100px\"}}>&copy; {new Date().getFullYear()} Mwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}